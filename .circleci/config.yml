# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test:
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: golang:latest
    resource_class: small
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v6-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v6-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: build binary
          command: |
            go build
      - run:
          name: setup local hosts
          command: |
            echo "127.0.0.1 terraform-registry.local.dev" | tee -a /etc/hosts
            echo "127.0.0.1 hashicorp-releases.local.dev" | tee -a /etc/hosts
      - run:
          name: generate ssl certificate
          command: |
            openssl req -x509 -newkey rsa:2048 -sha256 -days 1 -nodes \
              -keyout /tmp/terraform-registry.key -out /tmp/terraform-registry.crt -subj "/CN=terraform-registry.local.dev" \
              -addext "subjectAltName=DNS:terraform-registry.local.dev,DNS:hashicorp-releases.local.dev"
      - run:
          name: install terraform
          command: |
            apt update
            apt install -y unzip
            curl -LO https://releases.hashicorp.com/terraform/1.1.7/terraform_1.1.7_linux_amd64.zip
            unzip terraform_1.1.7_linux_amd64.zip
            chmod +x terraform
            mv terraform /usr/local/bin
            terraform version
      - run:
          name: install caddy
          command: |
            apt update
            apt install -y debian-keyring debian-archive-keyring apt-transport-https
            curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | tee /etc/apt/trusted.gpg.d/caddy-stable.asc
            curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list
            apt update
            apt install -y caddy
      - run:
          name: configure caddy
          command: |
            \cp -f ./test/Caddyfile /etc/caddy/Caddyfile
            /usr/bin/caddy run --environ --config /etc/caddy/Caddyfile &

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  end to end test:
    jobs:
      - test
